---
import type { GetStaticPathsOptions, GetStaticPathsResult } from "astro";
import { trimStart } from "lodash-es";
import Navbar from "../../components/Navbar.astro";
import Layout from "../../layouts/Layout.astro";
import { fetchPhotos, Photo } from "../../photos";

export interface Props {
	files: Record<string, Photo>;
	dirs: Record<string, Photo>;
}

export async function getStaticPaths(options: GetStaticPathsOptions) {
	const photos = await fetchPhotos("/wnelson-photos");
	const result: GetStaticPathsResult = Object.entries(photos).map(
		([path, { files, dirs }]) => {
			return {
				params: { path: path === "/" ? undefined : trimStart(path, "/") },
				props: { files, dirs },
			};
		}
	);

	return result;
}

const { files, dirs } = Astro.props;

const title = Astro.url.pathname
	.split("/")
	.map(decodeURIComponent)
	.filter((p) => p)
	.pop();
---

<Layout title={title ?? "Photos"}>
	<div class="container mx-auto w-full">
		<Navbar />
		<ul>
			{
				Object.entries(dirs).map(([path, dir]) => (
					<li>
						<a href={`/photos${path}`}>{dir.ObjectName}</a>
					</li>
				))
			}
		</ul>
		<h1 class="text-6xl font-bold mt-8">{title}</h1>
		<div class="flex flex-wrap gap-2">
			{
				Object.entries(files).map(([path, photo]) => {
					return (
						<a href={`https://thumbs.photos.wnelson.dev${path}`}>
							<img
								src={`https://thumbs.photos.wnelson.dev${path}?width=250`}
								alt={photo.ObjectName}
							/>
						</a>
					);
				})
			}
		</div>
	</div>
</Layout>
